name: bifrost-consensus-testnet

image:
  #  name: bifrost-node
  #  name: ghcr.io/topl/bifrost-node
  name: ghcr.io/topl/bifrost-node
  tag:

delayerImage:
  name: us-central1-docker.pkg.dev/topl-shared-project-dev/topl-artifacts-dev/network-delayer
  tag:

orchestratorImage:
  name: us-central1-docker.pkg.dev/topl-shared-project-dev/topl-artifacts-dev/testnet-simulation-orchestrator
  tag: latest

bigBang:
  timestamp:
  delayMs:

shared-config: {}
configs: {}

results:
  bucket:
  prefix: /simulation/results/

scenario:
  targetHeight: 30
  transactionsPerSecond: 2.0
  timeout: 10 minutes

resources:
  node:
    limits:
      cpu: 2000m
      memory: 1000Mi
    requests:
      cpu: 1000m
      memory: 1000Mi
  orchestrator:
    limits:
      cpu: 1500m
      memory: 1500Mi
    requests:
      cpu: 500m
      memory: 1500Mi
  networkDelayer:
    limits:
      cpu: 800m
      memory: 768Mi
    requests:
      cpu: 200m
      memory: 768Mi


podSecurityContext:
  runAsUser: 1001 # TODO: Update Bifrost Docker container to use high UID. Add CKV_K8S_40 as a check.
  runAsGroup: 0
  fsGroup: 0
  seccompProfile:
    type: RuntimeDefault

securityContext:
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

args: []

command:

service:
  type: ClusterIP
  ports:
    p2p: 9085
    rpc: 9084

volume:
  mountDirectory: /opt/docker/.bifrost
  storageClass:
  storageSize: 1Gi

livenessProbe:
  enabled: false
  initialDelaySeconds: 30
  timeoutSeconds: 30
  periodSeconds: 60

readinessProbe:
  enabled: false
  initialDelaySeconds: 30
  timeoutSeconds: 30
  periodSeconds: 60

serviceAccount:
  create: true
  name: bifrost-orchestrator-account

rbac:
  create: true

## These settings control where the results are published
#results:
  ## The Storage Bucket on Google Cloud
  #bucket: bifrost-topl-labs-testnet-scenario-results
  ## The prefix to apply to each uploaded file.  The scenario name is automatically applied as a suffix to this prefix.
  #prefix: /simulation/results/

## These settings control the parameters of the scenario
#scenario:
  ## The height that must be reached by each node in the scenario
  #targetHeight: 30
  ## The number of transactions to generate and broadcast per second.  Transactions are broadcasted to nodes at random.
  #transactionsPerSecond: 2.5
  ## The maximum length of time to wait for an individual node to reach the target height.  If a node fails to reach
  ## the target height within this time, the scenario will still pass, but a log message will be presented
  ## indicating that it was terminated early.
  #timeout: 10 minutes

## These settings will apply to the configurations of all nodes.
#shared-config:
  ## Define custom application.conf overrides
  #bifrost:
    #big-bang:
      #staker-count: 2
    #protocols:
      #0:
        #slot-duration: 250 milli

## Define an entry for each node you wish to launch in the cluster
#configs:
  ## Name the node
  #producer0:
    ## Define custom application.conf overrides
    #bifrost:
      #big-bang:
        #local-staker-index: 0
    ## Define the network topology of this node
    #topology:
      ## Applies to all connections received by this node
      #ingress:
        ## The amount of throttling to impose on the local node's portion of the connection
        #throttle:
          #latency: 10 milli
          #downloadBytesPerSecond: 500000
          #uploadBytesPerSecond: 500000
  #producer1:
    #bifrost:
      #big-bang:
        #local-staker-index: 1
    #topology:
      #ingress:
        #throttle:
          #latency: 10 milli
          #downloadBytesPerSecond: 500000
          #uploadBytesPerSecond: 500000
  #relay0:
    #bifrost:
      #big-bang:
        #local-staker-index: -1
    #topology:
      #ingress:
        #throttle:
          #latency: 10 milli
          #downloadBytesPerSecond: 500000
          #uploadBytesPerSecond: 500000
      ## Outbound connections are defined here
      #egress:
          ## The name of the peer
        #- peer: producer0
          ## The amount of throttling to impose on the local node's portion of the connection
          #throttle:
            #latency: 10 milli
            #downloadBytesPerSecond: 500000
            #uploadBytesPerSecond: 500000
        #- peer: producer1
          #throttle:
            #latency: 10 milli
            #downloadBytesPerSecond: 500000
            #uploadBytesPerSecond: 500000
