apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.service | lower | quote }}
  labels:
    {{- include "genus.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  serviceName: {{ .Values.service | lower | quote }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "genus.selectorLabels" . | nindent 6 }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        # Kubernetes recommended labels
        {{- include "genus.labels" . | nindent 8 }}
        # Isio required labels
        app: {{ .Values.service | lower | quote }}
        version: {{ .Values.version | quote }}
    spec:
      nodeSelector: 
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      serviceAccountName: {{ .Values.serviceAccount.name | lower | quote }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.service | lower | quote }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          imagePullPolicy: {{ .Values.image.imagePullPolicy | quote }}
          env:
            - name: ORIENT_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "genus.dbSecretName" . }}
                  key: db-password
            {{- toYaml .Values.env | nindent 12 }}
          args:
            - "--orientDbPassword"
            - "$(ORIENT_DB_PASSWORD)"
            - "--dataDir"
            - "/genus/orient-db"
            - "--enableReplicator"
            - "{{ .Values.replicator.enable }}"
            - "--nodeRpcHost"
            - "{{ .Values.nodeRpc.host }}"
            - "--nodeRpcPort"
            - "{{ .Values.nodeRpc.port }}"
            - "--nodeRpcTls"
            - "{{ .Values.nodeRpc.tls }}"
          ports:
          {{- range .Values.ports }}
            - name: {{ .name | quote }}
              containerPort: {{ .targetPort }}
              protocol: TCP
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{ toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.probes }}
          {{ toYaml .Values.probes | nindent 10 }}
          {{- end }}
          volumeMounts:
            - name: {{ (print .Values.service "-pv") | quote }}
              mountPath: "/genus"
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: {{ (print .Values.service "-pv") | quote }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.volume.storageClass }}
        resources:
          requests:
            storage: {{ .Values.volume.storageSize }}
