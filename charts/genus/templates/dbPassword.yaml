# Reference: https://itnext.io/manage-auto-generated-secrets-in-your-helm-charts-5aee48ba6918

apiVersion: v1
kind: Secret
metadata:
  name: {{ ((print .Values.service "-db-password") | lower | quote) }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace ((print .Values.service "-db-password") | lower)) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $secret to existing secret data or generate a random one when not exists
  {{- $secret := (get $secretData "db-password") | default (randAlphaNum 32 | b64enc) }}
  db-password: {{ $secret | quote }}
