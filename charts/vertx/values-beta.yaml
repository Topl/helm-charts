# Default values for redis.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

common:
  updateStrategy: "RollingUpdate"
  maxUnavailable: 1
  maxSurge: 1
    
replicaCount: 1

image:
  repository: us-central1-docker.pkg.dev/topl-shared-project-dev/topl-artifacts-dev/vertx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: beta

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

port: 2377

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: true
  name: vertx-svc-beta
  type: LoadBalancer
  targetPort: 2377
  port: 2377
  portName: vertx-beta
  annotations:
    external_dns: "beta.vertx.topl.services."

volume:
  mountPath: /app/data

configMap:
  create: true
  name: vertx-config-beta
  configMapProperties:
    PORT: 2377
    HEALTH_CHECK_PORT: 8101
    MAINNET_TARGET_URI: 'https://main.torus.topl.network'
    VALHALLA_TARGET_URI: 'https://valhalla.torus.topl.network'
    LOGGING_HOST: 'log.topl.tech'
    LOGGING_PORT: 12201
    LOGGING_PROTOCOL: 'tcp'
    NODE_ENV: 'beta'

secrets:
  create: false
  name: vertx-secrets-beta

healthCheck:
  port: 8101
  portName: health-check
  livenessProbe:
    enabled: true
    path: /live
    initialDelaySeconds: 150 ## Application takes a while to start up
    timeoutSeconds: 30
    periodSeconds: 60 # Perform check every x seconds.
  readinessProbe:
    enabled: true
    path: /ready
    initialDelaySeconds: 150 ## Application takes a while to be ready
    timeoutSeconds: 30
    periodSeconds: 60 # Perform check every x seconds.

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

### Redis configurations
redis:
  name: vertx-redis-beta
  replicaCount: 1
  image:
    repository: redis
    imagePullPolicy: IfNotPresent
    tag: latest
  port: 6379

  service:
    name: vertx-redis-svc-beta

  volume:
    storageClass: standard
    storageSize: 1Gi
    mountPath: /opt/redis/data
    accessModes: [ "ReadWriteOnce" ]

  ## Redis config file
  ## ref: https://redis.io/topics/config
  ##
  configMap:
    create: true
    name: redis-config-beta
    redisUrl: redis://vertx-redis-svc-beta:6379
    conf: |-
      # Enable AOF https://redis.io/topics/persistence#append-only-file
      appendonly yes
      maxclients 10000
      # Disable RDB persistence, AOF persistence already enabled.
      save ""