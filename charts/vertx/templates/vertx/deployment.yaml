apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vertx.fullname" . }}
  labels:
    {{- include "vertx.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "vertx.selectorLabels" . | nindent 6 }}
  strategy:
    type: {{ .Values.common.updateStrategy }}
    rollingUpdate:
      maxUnavailable: {{ .Values.common.maxUnavailable }}
      maxSurge: {{ .Values.common.maxSurge }}
  template:
    metadata:
      labels:
        {{- include "vertx.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: REDIS_URL
              value: "{{ .Values.redis.configMap.redisUrl }}"
            - name: PORT
              value: "{{ .Values.service.port }}"
          envFrom:
            - secretRef:
                name: {{ .Values.secret.name }}
            {{- if .Values.configMap.create }}
            - configMapRef:
                name: {{ .Values.configMap.name }}
            {{- end }}
          ports:
            - name: {{ .Values.service.portName }}
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: {{ .Values.service.https.portName }}
              containerPort: {{ .Values.service.https.port }}
              protocol: TCP
          {{- if .Values.healthCheck.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              port: {{ .Values.service.port }}
              path: {{ .Values.healthCheck.readinessProbe.path }}
            initialDelaySeconds: {{ .Values.healthCheck.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.healthCheck.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.healthCheck.readinessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.healthCheck.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              port: {{ .Values.service.port }}
              path: {{ .Values.healthCheck.livenessProbe.path }}
            initialDelaySeconds: {{ .Values.healthCheck.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.healthCheck.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.healthCheck.livenessProbe.periodSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: {{ .Values.server.certificate.secretName }}
            mountPath: {{ .Values.volume.tls.mountPath }}
      volumes:
      - name: {{ .Values.server.certificate.secretName }}
        secret:
          secretName: {{ .Values.server.certificate.secretName }}