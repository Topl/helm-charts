# Reference: https://itnext.io/manage-auto-generated-secrets-in-your-helm-charts-5aee48ba6918
{{ if (not .Values.wallet.existingSecret) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "bitcoin.walletSecretName" . }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace (include "bitcoin.walletSecretName" .)) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $secret to existing secret data or generate a random one when not exists
  {{- $walletUsername := (get $secretData "username") | default (include "bitcoin.rpcUsername" .) }}
  {{- $walletPassword := (get $secretData "password") | default (include "bitcoin.rpcPassword" .) }}
  {{- $walletPassphrase := (get $secretData "walletpassphrase") | default (include "bitcoin.walletPassphrase" .) }}
  username: {{ $walletUsername }}
  password: {{ $walletPassword }}
  walletpassphrase: {{ $walletPassphrase}}
{{- end }}
