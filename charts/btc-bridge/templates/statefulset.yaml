apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.service | lower | quote }}
  labels:
    app.kubernetes.io/name: {{ .Values.service | lower | quote }}
    app.kubernetes.io/part-of: {{ .Values.system | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  serviceName: {{ (print .Values.service) | lower | quote }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.service | lower | quote }}
      version: {{ .Values.version | quote }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        # Kubernetes recommended labels
        app.kubernetes.io/name: {{ .Values.service | lower | quote }}
        app.kubernetes.io/part-of: {{ .Values.system | quote }}
        app.kubernetes.io/version: {{ .Values.version | quote }}
        # Isio required labels
        app: {{ .Values.service | lower | quote }}
        version: {{ .Values.version | quote }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector: 
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name | lower | quote }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountToken }}
      containers:
        - name: {{ .Values.service | lower | quote }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          imagePullPolicy: {{ .Values.image.imagePullPolicy | quote }}
{{- if .Values.env }}
          env: {{- toYaml .Values.env | nindent 10 }}
{{- end }}
          command:
          {{- range .Values.command }}
            - {{ quote . }}
          {{- end }}
          args:
          {{- range .Values.args }}
            - {{ quote . }}
          {{- end }}
          ports:
{{- range .Values.ports }}
            - name: {{ .name | quote }}
              containerPort: {{ .targetPort }}
              protocol: TCP
{{- end }}
{{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- end }}
{{- if .Values.probes }}
{{ toYaml .Values.probes | indent 10 }}
{{- end }}
          volumeMounts:
            - name: {{ (print .Values.service "-pv") | quote }}
              mountPath: {{ .Values.volume.mountDirectory }}
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: cache
          emptyDir: {}
        - name: tmp
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: {{ (print .Values.service "-pv") | quote }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.volume.storageClass }}
        resources:
          requests:
            storage: {{ .Values.volume.storageSize }}
